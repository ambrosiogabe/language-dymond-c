# TextMate tutorial: http://manual.macromates.com/en/language_grammars

# Regex to convert keys to unquoted: '(include|match|captures|begin|end|beginCaptures|endCaptures|name|patterns|0|1|2|3|4|5|6|7|8|9|comment|fileTypes|scopeName|repository|contentName|firstLineMatch|foldingStartMarker|foldingStopMarker)':

scopeName: 'source.dymond' # <scope> should be a short, unique indicator for the language ("js", "php", "c", etc.)
name: 'Dymond' # The title that will show up in grammar selection and on your status bar.
fileTypes: [ # An array of file extensions.
  'dy'
]
firstLineMatch: '' # A regular expression that is matched against the first line of the document when Atom is trying to decide if the grammar is appropriate. Useful for shell scripts, mostly.
foldingStartMarker: '' # A regular expression that checks for the start of a foldable area (such as `{`).
foldingStopMarker: '' # A regular expression that checks for the end of a foldable area (such as `}`). If both folding markers are matched in the same line, there will be no foldable area.
patterns: [ # An array of individual pattern declarations.
  {
    include: 'source.python'
  },
  {
    match: '\\b(if|else|while|for|in|and|or|func|class|static)'
    name: 'keyword.control.dymond'
  },
  {
    match: '\\b(func)\\s+(\\w+)\\s+(\\w+)\\s*\\(.*\\)'
    captures:
      1:
        name: 'keyword.control.dymond'
      2:
        name: 'entity.name.type.dymond'
      3:
        name: 'entity.name.function.dymond'
    name: 'meta.function.dymond'
  },
  {
    match: '\\b(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))\\b'
    name: 'constant.numeric.dymond'
  },
  {
    match: '\\b(True|False|Null)'
    name: 'constant.language.dymond'
  },
  {
    begin: '\\/\\*'
    end: '\\*\\/'
    name: 'comment.block.dymond'
  },
]
